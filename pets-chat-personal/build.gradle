if (isRelease) { //如果是发布版本，各个模块都不能独立运行
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

def androidConfig = rootProject.ext.androidConfig
def appId = rootProject.ext.appId
def depConfig = rootProject.ext.depConfig
def hostUrl = rootProject.ext.hostUrl
def releaseConfig = rootProject.ext.releaseConfig
def debugConfig = rootProject.ext.debugConfig

android {
    compileSdkVersion androidConfig.compileSdkVersion
    buildToolsVersion androidConfig.buildToolsVersion

    defaultConfig {
        if (!isRelease) {
            applicationId appId.pets_chat_personal
        }
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionCode androidConfig.versionCode
        versionName androidConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file(debugConfig.storeFile)
            storePassword debugConfig.storePassword
            keyAlias debugConfig.keyAlias
            keyPassword debugConfig.keyPassword
        }
        release {
            //签名证书文件
            storeFile file(releaseConfig.storeFile)
            //签名证书文件的密码
            storePassword releaseConfig.storePassword
            //密钥别名
            keyAlias releaseConfig.keyAlias
            //密钥密码
            keyPassword releaseConfig.keyPassword
            //是否开启v2打包
            v2SigningEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            buildConfigField("String", "HOST_URL", "${hostUrl.debug}")
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            buildConfigField("String", "HOST_URL", "${hostUrl.release}")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //配置资源路径，方便测试环境，打包不集成到正式环境
    sourceSets {
        main {
            if (!isRelease) {
                //如果是组件化模式，需要单独运行时
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                //集成化模式，整个项目打包到apk
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //release时debug目录下文件不需要合并到主工程
                    exclude '**/debug/**'
                }
            }
        }
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':library:app-common')
    implementation project(path: ':library:pets-chat-db')
    implementation project(path: ':library:pets-chat-entity')

    // XPage自动编织
    implementation depConfig.xpage
    annotationProcessor depConfig.xpageCompiler
    // 单元测试
    testImplementation depConfig.junit
    androidTestImplementation depConfig.anroidxJunit
    androidTestImplementation depConfig.androidxEspressoCore
}